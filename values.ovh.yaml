global:
  _hopsworks:
    cloudProvider: OVH
    managedDockerRegistery:
      credHelper:
        enabled: false
        secretName: ''
      domain: https://25958m36.c1.de1.container-registry.ovh.net
      enabled: true
      namespace: hopsworks
    managedObjectStorage:
      enabled: true
      s3:
        bucket:
          name: lexs3
        endpoint: https://s3.sbg.io.cloud.ovh.net/
        region: SBG
        secret:
          access_key_id: access-key-id
          name: ovh-credentials
          secret_access_key: secret-access-key
    minio:
      enabled: false
    storageClassName: ''
hopsfs:
  objectStorage:
    enabled: true
    provider: S3
    s3:
      bucket:
        name: lexs3
      endpoint: https://s3.sbg.io.cloud.ovh.net/
      region: SBG
      signingRegion: SBG
hopsworks:
  dockerRegistry:
    preset:
      secrets:
      - regcred
      - ovhregcred
      usePullPush: false
  variables:
    docker_operations_image_pull_secrets: regcred,ovhregcred
    docker_operations_managed_docker_secrets: ovhregcred
olk:
  opensearch:
    backup:
      enabled: true
      repositories:
        default:
          backup_payload:
            ignore_unavailable: true
            include_global_state: true
            indices: '*'
            partial: false
          credentials:
            secret_from: ovh-credentials
          s3:
            endpoint: https://s3.sbg.io.cloud.ovh.net/
            path_style_access: true
            protocol: https
            region: SBG
          schedule:
            cron: 0 0 * * *
          settings:
            base_path: opensearch-backup
            bucket: lexs3
            client: default
            endpoint: https://s3.sbg.io.cloud.ovh.net/
            path_style_access: true
            protocol: https
            region: SBG
          snapshot_name: opensearch
rondb:
  backups:
    enabled: true
    s3:
      bucketName: lexs3
      endpoint: https://s3.sbg.io.cloud.ovh.net/
      keyCredentialsSecret:
        key: access-key-id
        name: ovh-credentials
      region: SBG
      secretCredentialsSecret:
        key: secret-access-key
        name: ovh-credentials
      serverSideEncryption: ''
      signingRegion: SBG
    schedule: 0 3 * * mon
  restoreFromBackup:
    backupId: null
    excludeDatabases: []
    excludeTables: []
    objectStorageProvider: s3
    s3:
      bucketName: lexs3
      keyCredentialsSecret:
        key: access-key-id
        name: ovh-credentials
      region: SBG
      secretCredentialsSecret:
        key: secret-access-key
        name: ovh-credentials
      serverSideEncryption: aws:kms
