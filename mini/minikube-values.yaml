global:
  _hopsworks:
    imagePullPolicy: IfNotPresent
    image:
      platform: linux/arm64
    minio:
      enabled: false
    managedDockerRegistery:
      enabled: false
    externalLoadBalancers:
      enabled: false
    dockerRegistry:
      registry: "docker.hops.works"
    storageClassName: "standard"

hopsfs:
  datanode:
    count: 1
    storage:
      size: 5Gi
  namenode:
    resources:
      requests:
        memory: "256Mi"
      limits:
        memory: "512Mi"

rondb:
  enabled: false

hopsworks:
  image:
    platform: linux/arm64
  replicaCount:
    worker: 1
  resources:
    admin:
      auto_jvm: true
      jvm:
        memory:
          heap: 512
          metaspace: 256
          compressedClassSpaceSize: 128
          nonMethodCodeHeapSize: 5
          profiledCodeHeapSize: 32
          nonProfiledCodeHeapSize: 32
          buffer: 256
    worker:
      auto_jvm: true
      jvm:
        memory:
          heap: 512
          metaspace: 256
          compressedClassSpaceSize: 128
          nonMethodCodeHeapSize: 5
          profiledCodeHeapSize: 32
          nonProfiledCodeHeapSize: 32
          buffer: 256

kafka:
  enabled: false

consul:
  enabled: false

docker-registry:
  enabled: false

airflow:
  enabled: false

ingress:
  enabled: true
  ingressClassName: nginx
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: "10m"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "300"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "300"

onlinefs:
  enabled: false

prometheus:
  enabled: false

grafana:
  enabled: false

nvidiadci:
  enabled: false

kube-kserve:
  enabled: false

olk:
  enabled: false